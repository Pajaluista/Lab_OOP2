package operations;

import functions.MathFunction;
/**–ß—Ç–æ —Ç–∞–∫–æ–µ RightSteppingDifferentialOperator?
 üìå –≠—Ç–æ –∫–ª–∞—Å—Å, –∫–æ—Ç–æ—Ä—ã–π —Ä–µ–∞–ª–∏–∑—É–µ—Ç –ø—Ä–∞–≤—É—é —Ä–∞–∑–Ω–æ—Å—Ç–Ω—É—é –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—É—é.
 –û–Ω –Ω–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç SteppingDifferentialOperator.
 –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —à–∞–≥ step –¥–ª—è –ø—Ä–∏–±–ª–∏–∂—ë–Ω–Ω–æ–≥–æ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–Ω–æ–π.
 */
public class RightSteppingDifferentialOperator extends SteppingDifferentialOperator {
    public RightSteppingDifferentialOperator(double step) {
        super(step);
    }

    @Override
    public MathFunction derive(MathFunction function) {
        return new MathFunction() {
            @Override
            public double apply(double x) {
                return (function.apply(x + step) - function.apply(x)) / step;
            }
        };
    }
}